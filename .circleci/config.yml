---
version: 2
jobs:
####################################################################################################
## JOB:     setup-test-environment
## PURPOSE: Creates an RSA private key in a CircleCI workspace directory based on values from 
##          the environment variables that are available to this project.
####################################################################################################
  node-latest2: &test2
    docker:
      - image: node:latest
    working_directory: ~/cli
    steps:
      - checkout
      - restore_cache: &restore_cache2
          keys:
            - v1-npm-{{checksum ".circleci/config.yml"}}-{{checksum "yarn.lock"}}
            - v1-npm-{{checksum ".circleci/config.yml"}}
      - run:
          name: Install system dependencies
          command: |
            mkdir sfdx
            wget -qO- $DX_CLI_URL | tar xJ -C sfdx --strip-components 1
            ./sfdx/install
            sfdx
            apt-get update -y
            apt-get install -y xxd
      - run:
          name: Display version info for installed system dependencies
          command: |
            sfdx version          # Output the version of the CLI
            sfdx plugins --core   # Output the version of the core plugins
            node --version
            npm  --version
            git  --version
            xxd  --version
      - run:
          name: Prepare JWT key file for use by force:auth:jwt:grant
          command: |
            # Create directory where all JWT Org Keys will be stored
            mkdir /tmp/sfdx-keys
            # Convert the Hex Keys stored in the context's environment variables back to binary
            echo $DEVHUB_SERVER_KEY_HEX | xxd -r -ps >> /tmp/sfdx-keys/dev-hub.key
            # Confirm that our converted keys are both valid RSA Private Keys
            openssl rsa -in /tmp/sfdx-keys/dev-hub.key -check -noout
      - run:
          name: Authenticate and connect to the Dev Hub
          command: |
            # Confirm that the key can actually be used to login to the specific
            # Salesforce Org that the username stored in $DEVHUB_SFDC_USERNAME
            # is associated with.
            sfdx force:auth:jwt:grant -i $DEVHUB_CONSUMER_KEY \
                                      -f /tmp/sfdx-keys/dev-hub.key \
                                      -u $DEVHUB_SFDC_USERNAME \
                                      -d \
                                      -a DevHub-PBO
      - run:
          name: Install node package dependencies
          command: yarn
      - run:
          name: Run package test and post-test commands
          command: yarn test
      - run:
          name: Submit code coverage to codecov
          command: |
            ./node_modules/.bin/nyc report --reporter text-lcov > coverage.lcov
            curl -s https://codecov.io/bash | bash
      - run:
          name: Mark scratch orgs for deletion
          command: |
            sfdx force:org:delete -p -u falcon-test-recipe-01

      # Store SFDX logs as artifacts
      - store_artifacts:
          path: ~/.sfdx/sfdx.log
          destination: sfdx-logs







####################################################################################################
## JOB:     node-latest
## PURPOSE: ???
####################################################################################################
  node-latest: &test
    docker:
      - image: node:latest
    working_directory: ~/cli
    steps:
      - checkout
      - restore_cache: &restore_cache
          keys:
            - v1-npm-{{checksum ".circleci/config.yml"}}-{{checksum "yarn.lock"}}
            - v1-npm-{{checksum ".circleci/config.yml"}}
      - run:
          name: Install dependencies
          command: yarn
      - run:
          name: Testing
          command: yarn test
      - run:
          name: Submitting code coverage to codecov
          command: |
            ./node_modules/.bin/nyc report --reporter text-lcov > coverage.lcov
            curl -s https://codecov.io/bash | bash

####################################################################################################
## JOB:     node-8
## PURPOSE: ???
####################################################################################################
  node-8:
    <<: *test
    docker:
      - image: node:8
####################################################################################################
## JOB:     cache
## PURPOSE: ???
####################################################################################################
  cache:
    <<: *test
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: yarn
      - save_cache:
          key: v1-npm-{{checksum ".circleci/config.yml"}}-{{checksum "yarn.lock"}}
          paths:
            - ~/cli/node_modules
            - /usr/local/share/.cache/yarn
            - /usr/local/share/.config/yarn

####################################################################################################
## WORKFLOW:  SFDX-Falcon Plugin Tests
## PURPOSE:   Primary workflow used by the CI process.
####################################################################################################
workflows:
  version: 2
  "SFDX-Falcon Plugin Tests":
    jobs:
      - node-latest2:
          context: org-global
          filters:
            branches:
              only:
                - test-config
#      - integration-test:
#          context: org-global
#          requires:
#            - setup-test-environment


#      - node-latest
#      - node-8
#      - cache:
#          filters:
#            tags:
#              only: /^v.*/
#            branches:
#              ignore: /.*/
