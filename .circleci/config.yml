---
version: 2
jobs:
####################################################################################################
## JOB:     setup-test-environment
## PURPOSE: Creates an RSA private key in a CircleCI workspace directory based on values from 
##          the environment variables that are available to this project.
####################################################################################################
  setup-test-environment:
    docker:
      - image: node:latest
    steps:
      - run: &download_sfdx
          name: Download the Salesforce CLI
          command: |
            mkdir sfdx
            wget -qO- $DX_CLI_URL | tar xJ -C sfdx --strip-components 1
      - run: &install_sfdx
          name: Install the Salesforce CLI
          command: |
            ./sfdx/install
            sfdx
      - run: &echo_sfdx_version
          name: Display version info for the Salesforce CLI and core plugins (will force updates if needed)
          command: |
            sfdx version          # Output the version of the CLI
            sfdx plugins --core   # Output the version of the core plugins
      - run: &echo_node_and_git_versions
          name: Display version info for locally installed Node, NPM, and Git
          command: |
            node --version
            npm  --version
            git  --version
            which git
            which openssl
            base64 --help
      - run:
          name: Prepare JWT Key Files for use by subsequent jobs
          command: |
            # Create directory where all JWT Org Keys will be stored
            mkdir /tmp/sfdx-keys
            # Convert the Hex Keys stored in the context's environment variables back to binary
            #echo $DEVHUB_SERVER_KEY_HEX | xxd -r -ps >> /tmp/sfdx-keys/dev-hub.key
            echo "$DEVHUB_SERVER_KEY_HEX" | base64 -d -w 0 >> /tmp/sfdx-keys/dev-hub.key
            # Confirm that our converted keys are both valid RSA Private Keys
            openssl rsa -in /tmp/sfdx-keys/dev-hub.key -check -noout
      - run: &authenticate_dev_hub
          name: Authenticate and connect to the Dev Hub
          command: |
            # Confirm that the key can actually be used to login to the specific
            # Salesforce Org that the username stored in $DEVHUB_SFDC_USERNAME
            # is associated with.
            sfdx force:auth:jwt:grant -i $DEVHUB_CONSUMER_KEY \
                                      -f /tmp/sfdx-keys/dev-hub.key \
                                      -u $DEVHUB_SFDC_USERNAME \
                                      -d \
                                      -a DevHub-PBO

      # Ensure that that the dev-hub.key file that was just created will be
      # available to other jobs performed during this build.
      - persist_to_workspace:
          root: /tmp/sfdx-keys
          paths:
            - dev-hub.key

      # Store SFDX logs as artifacts
      - store_artifacts:
          path: ~/.sfdx/sfdx.log
          destination: sfdx-logs

####################################################################################################
## JOB:     integration-test
## PURPOSE: ???
####################################################################################################
  integration-test: &test
    docker:
      - image: ncino/ci-sfdx
    working_directory: ~/cli
#    environment:
#      - SCRATCH_ORG_CONFIG: test-build-1-scratch-def.json
#      - TEST_RESULTS_PATH:  /tmp/test-results
#      - TEST_RESULTS_DIR:   test-build-1
    steps:
      - checkout                  # Required step.  Checks out the code from your repository.
      - attach_workspace:
          at: /tmp/sfdx-keys      # Attaches the workspace where our private key files were stored.
      - run: *echo_sfdx_version
      - run: *echo_node_and_git_versions
      - run: *authenticate_dev_hub
      - restore_cache: &restore_cache
          keys:
            - v1-npm-{{checksum ".circleci/config.yml"}}-{{checksum "yarn.lock"}}
            - v1-npm-{{checksum ".circleci/config.yml"}}
      - run:
          name: Install dependencies
          command: yarn
      - run:
          name: Testing
          command: yarn test
      - run:
          name: Submitting code coverage to codecov
          command: |
            ./node_modules/.bin/nyc report --reporter text-lcov > coverage.lcov
            curl -s https://codecov.io/bash | bash

#      - run:
#          name: Mark all scratch orgs created by this job for deletion
#          command: |
#            #### Mark the scratch org we used for deletion.
#            ## sfdx force:org:delete
#            # -u --TARGETUSERNAME           Required. Username or alias for the target org
#            # -p --NOPROMPT                 Optional. Do not prompt the user to confirm deletion
#            sfdx force:org:delete -u circle_build_$CIRCLE_BUILD_NUM \
#                                  -p

      # Store test results and SFDX logs as artifacts
#      - store_test_results:
#          path: /tmp/test-results
#      - store_artifacts:
#          path: /tmp/test-results
#          destination: test-results
      - store_artifacts:
          path: ~/.sfdx/sfdx.log
          destination: sfdx-logs










####################################################################################################
## JOB:     node-latest
## PURPOSE: ???
####################################################################################################
  node-latest: &test
    docker:
      - image: node:latest
    working_directory: ~/cli
    steps:
      - checkout
      - restore_cache: &restore_cache
          keys:
            - v1-npm-{{checksum ".circleci/config.yml"}}-{{checksum "yarn.lock"}}
            - v1-npm-{{checksum ".circleci/config.yml"}}
      - run:
          name: Install dependencies
          command: yarn
      - run:
          name: Testing
          command: yarn test
      - run:
          name: Submitting code coverage to codecov
          command: |
            ./node_modules/.bin/nyc report --reporter text-lcov > coverage.lcov
            curl -s https://codecov.io/bash | bash

####################################################################################################
## JOB:     node-8
## PURPOSE: ???
####################################################################################################
  node-8:
    <<: *test
    docker:
      - image: node:8
####################################################################################################
## JOB:     cache
## PURPOSE: ???
####################################################################################################
  cache:
    <<: *test
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: yarn
      - save_cache:
          key: v1-npm-{{checksum ".circleci/config.yml"}}-{{checksum "yarn.lock"}}
          paths:
            - ~/cli/node_modules
            - /usr/local/share/.cache/yarn
            - /usr/local/share/.config/yarn

####################################################################################################
## WORKFLOW:  SFDX-Falcon Plugin Tests
## PURPOSE:   Primary workflow used by the CI process.
####################################################################################################
workflows:
  version: 2
  "SFDX-Falcon Plugin Tests":
    jobs:
      - setup-test-environment:
          context: org-global
          filters:
            branches:
              only:
                - test-config
#      - integration-test:
#          context: org-global
#          requires:
#            - setup-test-environment


#      - node-latest
#      - node-8
#      - cache:
#          filters:
#            tags:
#              only: /^v.*/
#            branches:
#              ignore: /.*/
